{"version":3,"sources":["utils/firebaseConfig.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Title.js","hooks/useStorage.js","comps/Progressbar.js","comps/uploadForm.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","db","firestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsubscribe","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","console","log","className","map","key","src","url","alt","Title","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","style","width","UploadForm","types","type","onChange","event","selected","target","files","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d661c56f.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat/app\";\nimport 'firebase/compat/storage';\nimport 'firebase/compat/firestore';\n\n// TODO: Add SDKs for Firebase products that you want to use\n\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n\n// Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD6mUPRmBAo2z1-ILtoL8jT9ga1WCOvVNo\",\n  authDomain: \"firegram-38f33.firebaseapp.com\",\n  projectId: \"firegram-38f33\",\n  storageBucket: \"firegram-38f33.appspot.com\",\n  messagingSenderId: \"937708434166\",\n  appId: \"1:937708434166:web:b93f27f1e0682186cc32d7\"\n};\n\n\n// Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\nconst db = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { db, storage, timestamp };","import { useState, useEffect } from \"react\";\nimport { db } from '../utils/firebaseConfig';\n\nconst useFirestore = (collection) => {\n    const [docs, setDocs] = useState([]);\n\n    useEffect(() => {\n        const unsubscribe = db.collection(collection).orderBy('createdAt', 'desc').onSnapshot((snap) => {\n            let documents = [];\n            snap.forEach(doc => {\n                documents.push({...doc.data(), id: doc.id});\n            });\n            setDocs(documents);\n        });\n\n        return () => unsubscribe();\n    }, [collection]);\n\n    return {docs};\n}\n\nexport default useFirestore;","import React from \"react\";\nimport useFirestore from '../hooks/useFirestore';\n\nconst ImageGrid = () => {\n    // 'images' is the name of the firestore collection\n    const {docs} = useFirestore('images');\n    console.log(docs);\n\n    return (\n        <div className=\"img-grid\">\n            {docs && docs.map(doc => (\n                <div className=\"img-wrap\" key={doc.id}>\n                    <img src={doc.url} alt=\"img alt\"></img>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default ImageGrid;","import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>Firebase Collection</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import {useState, useEffect} from 'react';\nimport { storage, db, timestamp } from '../utils/firebaseConfig';\n\nconst useStorage = (file) => {\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n    useEffect(() => {\n        // references\n        const storageRef = storage.ref(file.name);\n        const collectionRef = db.collection('images');\n        \n        storageRef.put(file).on('state_changed', (snap) => {\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(percentage);\n        }, (err) => {\n            setError(err);\n        }, async () => {\n           const url = await storageRef.getDownloadURL(); \n           const createdAt = timestamp();\n           collectionRef.add({url, createdAt})\n           setUrl(url);\n        })\n    }, [file]);\n\n    return {progress, url, error};\n}\n\nexport default useStorage;","import React, { useEffect } from \"react\";\nimport useStorage from \"../hooks/useStorage\";\n// import useStorage from \"../hooks/useStorage\";\n\nconst ProgressBar = ({file, setFile}) => {\n    const {url, progress} = useStorage(file);\n    \n    useEffect(() => {\n        if(url){\n            setFile(null);\n        }\n    }, [url, setFile])\n\n    return (\n        <div className=\"progress-bar\" style={{width: progress + '%'}}></div>\n    )\n}\n\nexport default ProgressBar;","import React, { useState } from \"react\";\nimport ProgressBar from \"./Progressbar\";\n\nconst UploadForm = () => {\n    const [file, setFile] = useState(null);\n    const [error, setError] = useState(null);\n\n    const types = ['image/png', 'image/jpeg'];\n\n    const changeHandler = (event) => {\n        let selected = event.target.files[0];\n        if(selected && types.includes(selected.type)) {\n            setFile(selected);\n            setError(null);\n        } else {\n            setFile(null);\n            setError('Please select an image file (png or jpg)');\n        }\n    }\n\n    return (\n        <form>\n        <label>\n          <input type=\"file\" onChange={changeHandler} />\n          <span>+</span>\n        </label>\n        <div className=\"output\">\n          { error && <div className=\"error\">{ error }</div>}\n          { file && <div>{ file.name }</div> }\n          { file && <ProgressBar file={file} setFile={setFile} /> }\n        </div>\n      </form>\n    );\n}\n\nexport default UploadForm;","import React from 'react';\nimport ImageGrid from './comps/ImageGrid';\nimport Title from './comps/Title';\nimport UploadForm from './comps/uploadForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm />\n      <ImageGrid />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}